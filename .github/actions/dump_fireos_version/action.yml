name: Dump FireOS version
description: ''
inputs:
  device-slug:
    description: Slug of device
    required: true
  url:
    description: URL of Fire OS bin file
    required: true
  token:
    description: GitHub token
    required: true
runs:
  using: composite
  steps:
    - name: Setup Buildx
      uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0
    - name: Build docker image
      uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d # v6.12.0
      with:
        context: ./docker
        tags: fireos-version:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        push: false
        load: true
    - name: Dump Fire OS version
      id: fireos-version
      shell: bash -euxo pipefail {0}
      env:
        INPUT_URL: ${{ inputs.url }}
      run: |
        EXIT_CODE=0
        for i in {1..5}; do
          docker run --rm -e GITHUB_ACTIONS=${GITHUB_ACTIONS} fireos-version:latest -u "${INPUT_URL}" >> "${GITHUB_OUTPUT}" && :
          EXIT_CODE=$?
          [[ $EXIT_CODE -eq 0 ]] && break
          sleep 10
        done
        exit $EXIT_CODE
    - name: Output to file
      shell: bash -euxo pipefail {0}
      env:
        INPUT_JSON: ${{ steps.fireos-version.outputs.result }}
        OUTPUT_FILE: ${{ github.workspace }}/data/${{ inputs.device-slug }}/${{ inputs.device-slug }}_${{ fromJSON(steps.fireos-version.outputs.result).os_version }}.json
      run: |
        mkdir -p $(dirname "${OUTPUT_FILE}")
        echo "${INPUT_JSON}" | jq -r --sort-keys . | tee "${OUTPUT_FILE}"
    - name: Create Pull Request
      id: pull-request
      uses: peter-evans/create-pull-request@67ccf781d68cd99b580ae25a5c18a1cc84ffff1f # v7.0.6
      with:
        commit-message: 'chore: update ${{ inputs.device-slug }} version'
        branch: chore/update-${{ inputs.device-slug }}
        branch-suffix: random
        title: 'chore: update ${{ inputs.device-slug }} version'
        labels: automation
    - name: Merge
      if: steps.pull-request.outputs.pull-request-operation == 'created'
      shell: bash -euxo pipefail {0}
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: |
        gh pr merge ${{ steps.pull-request.outputs.pull-request-url }} --squash
