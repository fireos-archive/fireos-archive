name: Dump FireOS version
description: ''
inputs:
  device-slug:
    description: Slug of device
    required: true
  url:
    description: URL of Fire OS bin file
    required: true
  token:
    description: GitHub token
    required: true
runs:
  using: composite
  steps:
    - name: Setup Buildx
      uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # tag=v2.0.0
    - name: Setup Docker layer cache
      uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d # tag=v3.0.4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Build docker image
      uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8 # tag=v3.0.0
      with:
        context: ./docker
        tags: fireos-version:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        push: false
        load: true
    - name: Store docker layer cache
      shell: bash -euxo pipefail {0}
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    - name: Dump Fire OS version
      id: fireos-version
      shell: bash -euxo pipefail {0}
      env:
        INPUT_URL: ${{ inputs.url }}
      run: |
        docker run --rm -e GITHUB_ACTIONS=${GITHUB_ACTIONS} fireos-version:latest -u "${INPUT_URL}"
    - name: Output to file
      shell: bash -euxo pipefail {0}
      env:
        INPUT_JSON: ${{ steps.fireos-version.outputs.result }}
        OUTPUT_FILE: ${{ github.workspace }}/data/${{ inputs.device-slug }}/${{ inputs.device-slug }}_${{ fromJSON(steps.fireos-version.outputs.result).os_version }}.json
      run: |
        mkdir -p $(dirname "${OUTPUT_FILE}")
        echo "${INPUT_JSON}" | jq -r --sort-keys . | tee "${OUTPUT_FILE}"
    - name: Create Pull Request
      id: pull-request
      uses: peter-evans/create-pull-request@923ad837f191474af6b1721408744feb989a4c27 # tag=v4.0.4
      with:
        commit-message: 'chore: update ${{ inputs.device-slug }} version'
        branch: chore/update-${{ inputs.device-slug }}
        branch-suffix: random
        title: 'chore: update ${{ inputs.device-slug }} version'
        labels: automation
    - name: Merge
      if: steps.pull-request.outputs.pull-request-operation == 'created'
      shell: bash -euxo pipefail {0}
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: |
        gh pr merge ${{ steps.pull-request.outputs.pull-request-url }} --squash
